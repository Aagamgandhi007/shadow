name: Build and Deploy

on:
  workflow_dispatch: {}

env:
  applicationfolder: spring-boot-hello-world-example
  AWS_REGION: ca-central-1
  S3BUCKET: codedeploystack-webappdeploymentbucket-817wvzok0o1i

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::123456789012:role/YourIAMRoleName
          role-session-name: GitHub-Action-Role
          aws-region: ca-central-1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set Execute Permissions for Build Script
        run: chmod -R +x ./.github

      - name: Build and Package Maven
        id: package
        working-directory: ${{ env.applicationfolder }}
        run: $GITHUB_WORKSPACE/.github/scripts/build.sh

      - name: Upload Artifact to S3
        working-directory: ${{ env.applicationfolder }}/target
        run: aws s3 cp *.war s3://codedeploystack-webappdeploymentbucket-817wvzok0o1i/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::123456789012:role/YourIAMRoleName
          role-session-name: GitHub-Action-Role
          aws-region: ca-central-1

      - name: Trigger Deployment in CodeDeploy
        run: |
          echo "Deploying branch ${{ github.ref_name }} to Dev environment"
          commit_hash=$(git rev-parse HEAD)
          aws deploy create-deployment \
            --application-name CodeDeployAppNameWithASG \
            --deployment-group-name CodeDeployGroupName \
            --s3-location bucket=$S3BUCKET,bundleType=war,key=${{ github.ref_name }}.war \
            --ignore-application-stop-failures
